import Head from "next/head";
import styles from "@/styles/Project.module.css";
import { withPageAuthRequired, getSession } from "@auth0/nextjs-auth0";
import { getSupabase } from "../../utils/supabase";
import Link from "next/link";
import { useRouter } from "next/router";
import { Navbar } from "../components/navbar";
import { useEffect, useState } from "react";

// Individual project page
export default function project_id({ userProfile }) {
  const router = useRouter()
  const { project_id } = router.query

  const [project, setProject] = useState([])
  const supabase = getSupabase(userProfile.accessToken)

  useEffect(() => {
    const fetchProject = async () => {
      const { data } = await supabase.from('project').select('*').eq('project_id', project_id)
      setProject(data[0])
    }

    fetchProject()
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar userProfile={userProfile} />
      <main className={styles.main}>
        {project != undefined ? <h2>{project.name}</h2>:  null}
        {project != undefined? <h3>Project ID Number: {project_id}</h3> : null}
        {project != undefined ? <p>{project.description}</p> : null}
      </main>
    </>
  );
}

export const getServerSideProps = withPageAuthRequired({
  async getServerSideProps({ req, res }) {
    const {
      user: { accessToken, sub },
    } = await getSession(req, res)

    const supabase = getSupabase(accessToken)
    let userProfile = null;

    try {
      // if no user has user_id of sub, create new user
      const { data } = await supabase.from('user').upsert({ user_id: sub }, { onConflict: 'user_id' }).select()

      userProfile = data[0];
    }
    catch (e) {
      console.error(e.message)
    }

    return {
      props: { userProfile },
    }
  },
});